{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "deeef1d3-fa05-4038-867b-cf029abb6a8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bbdbce99-f1e5-4557-8d92-8bf34ab60001",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\imsut\\Downloads\n"
     ]
    }
   ],
   "source": [
    "print(os.getcwd())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "62fd1eb3-2f84-4bcb-b17c-c678be9861fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "from kan import * #neuro network KAN\n",
    "import torch # PyTorch library # optimize GPU selection\n",
    "import torch.nn as nn  # making your code cleaner and easier to write with prefix nn\n",
    "import torch.nn.functional as F #defining neural network layers or loss functions\n",
    "from tqdm import tqdm # creates a progress bar\n",
    "import random #: provides tools to generate random numbers, shuffle data, and choose random elements\n",
    "import numpy as np #array operations and math \n",
    "import pandas as pd #data manipulation and analysis\n",
    "import matplotlib.pyplot as plt #plotting library\n",
    "import seaborn as sns\n",
    "from keras.models import Sequential #deep learning library for building and training neural networks\n",
    "from keras.layers import Dense # simplifies the process of creating dense layers\n",
    "from sklearn.model_selection import train_test_split# simplifies the process of splitting datasets\n",
    "from sklearn.metrics import accuracy_score, matthews_corrcoef, f1_score, average_precision_score, roc_auc_score\n",
    "from sklearn.utils import shuffle #is used to shuffle the arrays make stuff random \n",
    "from sklearn.model_selection import KFold #ystematic and thorough cross-validation, leading to more reliable and unbiased evaluation \n",
    "import tensorflow as tf #shorter prefix tf\n",
    "from tensorflow.keras.models import Model #t allows for creating models with complex architectures, such as models with multiple inputs, multiple outputs, and shared layers.\n",
    "from tensorflow.keras.layers import Input, Dense, Dropout #Input, Dense, and Dropout. These classes are used to build the layers of a neural network model in TensorFlow's Keras API.\n",
    "from tensorflow.keras.optimizers import Adam #The Adam optimizer adjusts the learning rate for each parameter\n",
    "from tensorflow.keras.losses import BinaryCrossentropy #Binary Cross-Entropy, also known as log loss or logistic loss, measures the performance of a classification model\n",
    "from sklearn.model_selection import KFold #validation divides the dataset into smaller sets (or folds). \n",
    "from sklearn.metrics import matthews_corrcoef\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2c122c65-a9d0-4d41-8da6-ae4e57ee3114",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "device(type='cpu')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\") # prefer GPU over CPU \n",
    "device"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0e56a1d8-afe3-4892-8ae6-a66923363ee3",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#reads csv \n",
    "train_positive = pd.read_csv(\"LMSuccSite-main/LMSuccSite-main/data/train/features/train_positive_ProtT5-XL-UniRef50.csv\" , header = None).iloc[:,2:]\n",
    "train_negative = pd.read_csv(\"LMSuccSite-main/LMSuccSite-main/data/train/features/train_negative_ProtT5-XL-UniRef50.csv\", header = None).iloc[:,2:]\n",
    "\n",
    "\n",
    "\n",
    "test_positive = pd.read_csv(\"LMSuccSite-main/LMSuccSite-main/data/test/features/test_positive_ProtT5-XL-UniRef50.csv\" , header = None).iloc[:,2:]\n",
    "test_negative = pd.read_csv(\"LMSuccSite-main/LMSuccSite-main/data/test/features/test_negative_ProtT5-XL-UniRef50.csv\" , header = None).iloc[:,2:]\n",
    "\n",
    "#x = postive ptm sites and y = negtiave sites \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0ef20390-6a43-450a-a392-0d4222320a3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create labels\n",
    "train_positive_labels = np.ones(train_positive.shape[0])#creating a list of 1 when the 1 is there a PTM occurs\n",
    "train_negative_labels = np.zeros(train_negative.shape[0]) # creating a list of 0 when there is no PTM (CAT AND DOG EX)\n",
    "test_positive_labels = np.ones(test_positive.shape[0])\n",
    "test_negative_labels = np.zeros(test_negative.shape[0])\n",
    "\n",
    "\n",
    "\n",
    "X_train = np.vstack((train_positive,train_negative)) # stacking the postive an neg data together \n",
    "X_test = np.vstack((test_positive,test_negative))\n",
    "y_train = np.concatenate((train_positive_labels, train_negative_labels), axis = 0)\n",
    "y_test = np.concatenate((test_positive_labels, test_negative_labels), axis = 0)\n",
    "\n",
    "\n",
    "# shuffle X and y together\n",
    "X_train, y_train = shuffle(X_train, y_train)\n",
    "X_test, y_test = shuffle(X_test, y_test)\n",
    "\n",
    "\n",
    "# seperate validation data \n",
    "\n",
    "#X_train_embedding, X_val_embedding, y_train, y_val = train_test_split(X_train_embedding, y_train, test_size = 0.2, random_state = 47)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8284cbbf-2ff9-4b85-9f71-e0a28ac6c3fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., ..., 0., 0., 0.])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_negative_labels#features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4b198ebe-50d0-445b-b2f2-333ba69a04e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>...</th>\n",
       "      <th>1016</th>\n",
       "      <th>1017</th>\n",
       "      <th>1018</th>\n",
       "      <th>1019</th>\n",
       "      <th>1020</th>\n",
       "      <th>1021</th>\n",
       "      <th>1022</th>\n",
       "      <th>1023</th>\n",
       "      <th>1024</th>\n",
       "      <th>1025</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.064732</td>\n",
       "      <td>-0.019224</td>\n",
       "      <td>0.028428</td>\n",
       "      <td>-0.137157</td>\n",
       "      <td>-0.089915</td>\n",
       "      <td>0.200156</td>\n",
       "      <td>-0.069025</td>\n",
       "      <td>-0.161492</td>\n",
       "      <td>0.159383</td>\n",
       "      <td>0.006876</td>\n",
       "      <td>...</td>\n",
       "      <td>0.102902</td>\n",
       "      <td>-0.158384</td>\n",
       "      <td>0.185895</td>\n",
       "      <td>0.105293</td>\n",
       "      <td>0.220798</td>\n",
       "      <td>0.124474</td>\n",
       "      <td>-0.343277</td>\n",
       "      <td>0.145509</td>\n",
       "      <td>-0.087834</td>\n",
       "      <td>-0.096063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.139243</td>\n",
       "      <td>-0.148124</td>\n",
       "      <td>-0.039468</td>\n",
       "      <td>0.059778</td>\n",
       "      <td>-0.494408</td>\n",
       "      <td>0.143843</td>\n",
       "      <td>-0.411992</td>\n",
       "      <td>-0.455056</td>\n",
       "      <td>-0.026173</td>\n",
       "      <td>0.086357</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.286826</td>\n",
       "      <td>0.269863</td>\n",
       "      <td>-0.138673</td>\n",
       "      <td>-0.226782</td>\n",
       "      <td>0.019108</td>\n",
       "      <td>0.512874</td>\n",
       "      <td>0.120484</td>\n",
       "      <td>-0.236803</td>\n",
       "      <td>0.038014</td>\n",
       "      <td>0.079428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.108605</td>\n",
       "      <td>-0.301235</td>\n",
       "      <td>0.426571</td>\n",
       "      <td>-0.119991</td>\n",
       "      <td>0.022424</td>\n",
       "      <td>-0.133308</td>\n",
       "      <td>0.249296</td>\n",
       "      <td>-0.039953</td>\n",
       "      <td>-0.010830</td>\n",
       "      <td>-0.074179</td>\n",
       "      <td>...</td>\n",
       "      <td>0.301777</td>\n",
       "      <td>0.140142</td>\n",
       "      <td>0.023511</td>\n",
       "      <td>-0.103105</td>\n",
       "      <td>0.059468</td>\n",
       "      <td>-0.167813</td>\n",
       "      <td>-0.191641</td>\n",
       "      <td>-0.085689</td>\n",
       "      <td>0.144172</td>\n",
       "      <td>-0.206460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.083696</td>\n",
       "      <td>-0.146912</td>\n",
       "      <td>-0.130964</td>\n",
       "      <td>0.483827</td>\n",
       "      <td>-0.306842</td>\n",
       "      <td>-0.116142</td>\n",
       "      <td>-0.026465</td>\n",
       "      <td>0.023920</td>\n",
       "      <td>0.019155</td>\n",
       "      <td>-0.171691</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.134478</td>\n",
       "      <td>0.234266</td>\n",
       "      <td>0.205865</td>\n",
       "      <td>-0.148232</td>\n",
       "      <td>0.075050</td>\n",
       "      <td>-0.152487</td>\n",
       "      <td>-0.306150</td>\n",
       "      <td>-0.299941</td>\n",
       "      <td>0.024853</td>\n",
       "      <td>0.390819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.013225</td>\n",
       "      <td>0.255740</td>\n",
       "      <td>0.367701</td>\n",
       "      <td>-0.060447</td>\n",
       "      <td>-0.289076</td>\n",
       "      <td>-0.103517</td>\n",
       "      <td>-0.017137</td>\n",
       "      <td>-0.169214</td>\n",
       "      <td>0.177068</td>\n",
       "      <td>0.080039</td>\n",
       "      <td>...</td>\n",
       "      <td>0.151925</td>\n",
       "      <td>-0.188382</td>\n",
       "      <td>0.124291</td>\n",
       "      <td>0.101534</td>\n",
       "      <td>0.013728</td>\n",
       "      <td>0.104861</td>\n",
       "      <td>-0.199422</td>\n",
       "      <td>-0.208865</td>\n",
       "      <td>-0.033425</td>\n",
       "      <td>0.026489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4745</th>\n",
       "      <td>0.228544</td>\n",
       "      <td>0.021321</td>\n",
       "      <td>0.281189</td>\n",
       "      <td>0.040626</td>\n",
       "      <td>0.044846</td>\n",
       "      <td>0.357911</td>\n",
       "      <td>0.056128</td>\n",
       "      <td>-0.170829</td>\n",
       "      <td>-0.022786</td>\n",
       "      <td>-0.041775</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.236467</td>\n",
       "      <td>-0.019614</td>\n",
       "      <td>-0.175305</td>\n",
       "      <td>-0.087118</td>\n",
       "      <td>0.232721</td>\n",
       "      <td>-0.140860</td>\n",
       "      <td>-0.042498</td>\n",
       "      <td>0.094130</td>\n",
       "      <td>0.056266</td>\n",
       "      <td>-0.098592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4746</th>\n",
       "      <td>-0.287534</td>\n",
       "      <td>-0.232088</td>\n",
       "      <td>0.159940</td>\n",
       "      <td>-0.281191</td>\n",
       "      <td>-0.349853</td>\n",
       "      <td>0.138707</td>\n",
       "      <td>0.119222</td>\n",
       "      <td>-0.314909</td>\n",
       "      <td>0.223835</td>\n",
       "      <td>-0.134531</td>\n",
       "      <td>...</td>\n",
       "      <td>0.162698</td>\n",
       "      <td>0.236600</td>\n",
       "      <td>-0.027987</td>\n",
       "      <td>-0.185436</td>\n",
       "      <td>0.290615</td>\n",
       "      <td>0.133201</td>\n",
       "      <td>-0.195519</td>\n",
       "      <td>-0.005014</td>\n",
       "      <td>-0.292641</td>\n",
       "      <td>0.437026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4747</th>\n",
       "      <td>0.061535</td>\n",
       "      <td>0.447923</td>\n",
       "      <td>0.300027</td>\n",
       "      <td>0.090451</td>\n",
       "      <td>-0.028609</td>\n",
       "      <td>-0.056994</td>\n",
       "      <td>0.013367</td>\n",
       "      <td>-0.101473</td>\n",
       "      <td>-0.027248</td>\n",
       "      <td>0.314126</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.155669</td>\n",
       "      <td>-0.001689</td>\n",
       "      <td>-0.323738</td>\n",
       "      <td>-0.179747</td>\n",
       "      <td>0.215324</td>\n",
       "      <td>-0.138860</td>\n",
       "      <td>-0.240706</td>\n",
       "      <td>0.085901</td>\n",
       "      <td>0.222188</td>\n",
       "      <td>0.075638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4748</th>\n",
       "      <td>0.309183</td>\n",
       "      <td>-0.044227</td>\n",
       "      <td>0.062566</td>\n",
       "      <td>-0.034963</td>\n",
       "      <td>0.142115</td>\n",
       "      <td>0.093938</td>\n",
       "      <td>-0.154190</td>\n",
       "      <td>-0.182318</td>\n",
       "      <td>-0.083318</td>\n",
       "      <td>0.233739</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.027315</td>\n",
       "      <td>-0.084067</td>\n",
       "      <td>-0.337455</td>\n",
       "      <td>0.077173</td>\n",
       "      <td>0.348019</td>\n",
       "      <td>0.145955</td>\n",
       "      <td>-0.080631</td>\n",
       "      <td>0.024976</td>\n",
       "      <td>0.007948</td>\n",
       "      <td>-0.098466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4749</th>\n",
       "      <td>0.322147</td>\n",
       "      <td>0.053273</td>\n",
       "      <td>-0.140290</td>\n",
       "      <td>-0.087125</td>\n",
       "      <td>-0.012952</td>\n",
       "      <td>0.081964</td>\n",
       "      <td>0.068323</td>\n",
       "      <td>-0.012976</td>\n",
       "      <td>0.224349</td>\n",
       "      <td>-0.098437</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036609</td>\n",
       "      <td>0.139000</td>\n",
       "      <td>0.041547</td>\n",
       "      <td>-0.098445</td>\n",
       "      <td>0.380992</td>\n",
       "      <td>0.006390</td>\n",
       "      <td>-0.087499</td>\n",
       "      <td>0.067935</td>\n",
       "      <td>0.190777</td>\n",
       "      <td>-0.364686</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4750 rows × 1024 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          2         3         4         5         6         7         8     \\\n",
       "0     0.064732 -0.019224  0.028428 -0.137157 -0.089915  0.200156 -0.069025   \n",
       "1     0.139243 -0.148124 -0.039468  0.059778 -0.494408  0.143843 -0.411992   \n",
       "2    -0.108605 -0.301235  0.426571 -0.119991  0.022424 -0.133308  0.249296   \n",
       "3    -0.083696 -0.146912 -0.130964  0.483827 -0.306842 -0.116142 -0.026465   \n",
       "4    -0.013225  0.255740  0.367701 -0.060447 -0.289076 -0.103517 -0.017137   \n",
       "...        ...       ...       ...       ...       ...       ...       ...   \n",
       "4745  0.228544  0.021321  0.281189  0.040626  0.044846  0.357911  0.056128   \n",
       "4746 -0.287534 -0.232088  0.159940 -0.281191 -0.349853  0.138707  0.119222   \n",
       "4747  0.061535  0.447923  0.300027  0.090451 -0.028609 -0.056994  0.013367   \n",
       "4748  0.309183 -0.044227  0.062566 -0.034963  0.142115  0.093938 -0.154190   \n",
       "4749  0.322147  0.053273 -0.140290 -0.087125 -0.012952  0.081964  0.068323   \n",
       "\n",
       "          9         10        11    ...      1016      1017      1018  \\\n",
       "0    -0.161492  0.159383  0.006876  ...  0.102902 -0.158384  0.185895   \n",
       "1    -0.455056 -0.026173  0.086357  ... -0.286826  0.269863 -0.138673   \n",
       "2    -0.039953 -0.010830 -0.074179  ...  0.301777  0.140142  0.023511   \n",
       "3     0.023920  0.019155 -0.171691  ... -0.134478  0.234266  0.205865   \n",
       "4    -0.169214  0.177068  0.080039  ...  0.151925 -0.188382  0.124291   \n",
       "...        ...       ...       ...  ...       ...       ...       ...   \n",
       "4745 -0.170829 -0.022786 -0.041775  ... -0.236467 -0.019614 -0.175305   \n",
       "4746 -0.314909  0.223835 -0.134531  ...  0.162698  0.236600 -0.027987   \n",
       "4747 -0.101473 -0.027248  0.314126  ... -0.155669 -0.001689 -0.323738   \n",
       "4748 -0.182318 -0.083318  0.233739  ... -0.027315 -0.084067 -0.337455   \n",
       "4749 -0.012976  0.224349 -0.098437  ...  0.036609  0.139000  0.041547   \n",
       "\n",
       "          1019      1020      1021      1022      1023      1024      1025  \n",
       "0     0.105293  0.220798  0.124474 -0.343277  0.145509 -0.087834 -0.096063  \n",
       "1    -0.226782  0.019108  0.512874  0.120484 -0.236803  0.038014  0.079428  \n",
       "2    -0.103105  0.059468 -0.167813 -0.191641 -0.085689  0.144172 -0.206460  \n",
       "3    -0.148232  0.075050 -0.152487 -0.306150 -0.299941  0.024853  0.390819  \n",
       "4     0.101534  0.013728  0.104861 -0.199422 -0.208865 -0.033425  0.026489  \n",
       "...        ...       ...       ...       ...       ...       ...       ...  \n",
       "4745 -0.087118  0.232721 -0.140860 -0.042498  0.094130  0.056266 -0.098592  \n",
       "4746 -0.185436  0.290615  0.133201 -0.195519 -0.005014 -0.292641  0.437026  \n",
       "4747 -0.179747  0.215324 -0.138860 -0.240706  0.085901  0.222188  0.075638  \n",
       "4748  0.077173  0.348019  0.145955 -0.080631  0.024976  0.007948 -0.098466  \n",
       "4749 -0.098445  0.380992  0.006390 -0.087499  0.067935  0.190777 -0.364686  \n",
       "\n",
       "[4750 rows x 1024 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_negative #features "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4b177973-8a51-49c7-b58a-b625b6c407fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4749, 1024)\n",
      "(4750, 1024)\n"
     ]
    }
   ],
   "source": [
    "print(train_positive.shape) #prints the shape of the DataFrame train Pos 4750,1024\n",
    "print(train_negative.shape) #prints the shape of the DataFrame train Neg 4749,1024"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dd0bc692-e4ba-4e0c-bf0d-539f12c5b41c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(253, 1024)\n",
      "(2973, 1024)\n"
     ]
    }
   ],
   "source": [
    "print(test_positive.shape) #pritns the Dataframe shape of test \n",
    "print(test_negative.shape)\n",
    "#slicing allows you to extract specific elements or ranges of elements from a sequence #slcing \"test\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ac09c731-3f3d-4bc6-ae80-19685a14a694",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(9499, 1024)\n",
      "(9499,)\n",
      "(3226, 1024)\n",
      "(3226,)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(X_train.shape) #dimensions\n",
    "print(y_train.shape)\n",
    "print(X_test.shape)\n",
    "print(y_test.shape) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "008c707b-6a42-4dd8-b9a7-eeaf9228df9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ANN():   # neural network \n",
    "    # prot_t5\n",
    "    M1_input = Input(shape=(1024,)) # This defines an input layer for a neural network model with a specific shape, It also indicates that each input sample will be a vector of length 1024.\n",
    "    M1_dense_1 = Dense(256)(M1_input)#creates a fully connected layer with 256 neurons, connects it to the input layer M1_input\n",
    "    drop_out = Dropout(0.4)(M1_dense_1)\n",
    "   \n",
    "    M1_dense_2 = Dense(128, activation='relu')(drop_out) #relu is a activaction function \n",
    "    drop_out = Dropout(0.4)(M1_dense_2)\n",
    "    \n",
    "#     M1_dense_2 = Dense(64, activation='relu')(drop_out)\n",
    "#     leaky_relu = LeakyReLU(alpha=0.3)(M1_dense_2)\n",
    "#     drop_out = Dropout(0.7)(leaky_relu)\n",
    "    \n",
    "    M1_dense_3 = Dense(1, activation = 'sigmoid')(drop_out) #sigmoid is a activation function \n",
    "    model = Model(inputs=M1_input, outputs=M1_dense_3)\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "19307e19-c109-464f-9ffa-2837a3092616",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'model' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[13], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241m.\u001b[39msummary()\n",
      "\u001b[1;31mNameError\u001b[0m: name 'model' is not defined"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "808742c2-6376-4c44-8a43-d372aed3642e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# def ANN(): # calling ANN \n",
    "#     M1_input = Input(shape=(1024,))# vectors of length 1024, processes them through a dense layer with 256 units.\n",
    "#     M1_dense_1 = Dense(256)(M1_input)#1024 features, and the dense layer consists of 256 neurons.\n",
    "#     drop_out = Dropout(0.4)(M1_dense_1) # drop_out represents the output tensor of the dropout layer.\n",
    "#     output = Dense(1, activation='sigmoid')(drop_out)\n",
    "#     model = Model(inputs=M1_input, outputs=output)\n",
    "#     return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0e1a5e91-75d4-429f-919b-7ce1581803a5",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'ANN' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m model \u001b[38;5;241m=\u001b[39m ANN()\n\u001b[0;32m      2\u001b[0m model\u001b[38;5;241m.\u001b[39mcompile(optimizer\u001b[38;5;241m=\u001b[39mAdam(learning_rate\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1e-5\u001b[39m),\n\u001b[0;32m      3\u001b[0m               loss\u001b[38;5;241m=\u001b[39mBinaryCrossentropy(),\n\u001b[0;32m      4\u001b[0m               metrics\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maccuracy\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Assuming X_train and y_train are already defined\u001b[39;00m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'ANN' is not defined"
     ]
    }
   ],
   "source": [
    "model = ANN()\n",
    "model.compile(optimizer=Adam(learning_rate=1e-5),\n",
    "              loss=BinaryCrossentropy(),\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "# Assuming X_train and y_train are already defined\n",
    "history = model.fit(X_train, y_train, epochs=10, batch_size=32)\n",
    "#plot \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a81d4815-abf7-4595-a475-d7abf71072c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m101/101\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step\n",
      "[0.62025803 0.32939342 0.44527373 ... 0.5068424  0.21306239 0.49571908]\n"
     ]
    }
   ],
   "source": [
    "y_pred = model.predict(X_test).reshape(y_test.shape[0],)\n",
    "print(y_pred)\n",
    "y_pred = (y_pred > 0.5)\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "mcc = matthews_corrcoef(y_test, y_pred)\n",
    "acc = accuracy_score(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "935cd8ac-f6ec-4ffe-8d1f-f410be66074d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.19823268870318805\n",
      "0.6627402355858648\n",
      "[[1962 1011]\n",
      " [  77  176]]\n"
     ]
    }
   ],
   "source": [
    "print(mcc)\n",
    "print(acc)\n",
    "print(cm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6cad788a-5591-47a3-840c-13e5c390cc42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['accuracy', 'loss'])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history.history.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "28f579d8-a315-4474-992f-06ca7c43974e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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rx4+Pj5ERkaycOFC4M/TUwkJCbRq1Qpvb2+uueYatm/fnm8bixYtonnz5nh5eVG3bl0mTZqU7/s5OTk89dRThIeH4+XlRcOGDZk9e3a+MRs3bqR9+/b4+vrSqVOni2ZNF5HyQQVIRMqFiRMn8v777zN9+nR+++03Ro0axYMPPsiqVatcY5544gkmTZrEhg0bqF69Oj169CA3Nxc4X1x69epFnz592LZtG88++yxjx45lzpw5rvX79evHvHnzmDx5Mjt37mTGjBlUrlw5X45nnnmGSZMm8csvv+Dh4aEZuUXKKU2GKiJlXk5ODlWrVuXbb78lOjratXzQoEFkZ2czZMgQbrzxRubPn0/v3r0BOHnyJLVq1WLOnDn06tWLvn37cvz4cb7++mvX+k8++SQJCQn89ttvJCUl0aRJE7755htiY2MvyvDDDz9w44038u2333LzzTcDsHz5crp3787Zs2fx9vYu4d8FESlOOgIkImXe3r17yc7OpkuXLlSuXNn1ev/99/n9999d4/63HFWtWpUmTZqwc+dOAHbu3ElMTEy+7cbExLBnzx7sdjtbtmzBYrFw/fXXXzJLq1atXL8ODQ0FIDU1tcj7KCKly8PoACIil3PmzBkAEhISCAsLy/c9Ly+vfCWosHx8fK5onKenp+vXJpMJOH99koiULzoCJCJlXrNmzfDy8uLQoUM0bNgw3ys8PNw1bt26da5fnzp1iqSkJCIiIgCIiIhgzZo1+ba7Zs0aGjdujMVioWXLljgcjnzXFIlIxaUjQCJS5vn5+fH4448zatQoHA4HnTt3JiMjgzVr1uDv70+dOnUAeP7556lWrRohISE888wzBAUF0bNnTwD+9a9/0aFDB1544QV69+7N2rVrmTJlCm+//TYAdevWpX///jz00ENMnjyZyMhIDh48SGpqKr169TJq10WkhKgAiUi58MILL1C9enUmTpzIvn37CAwMpG3btjz99NOuU1Avv/wyI0aMYM+ePbRu3ZovvvgCq9UKQNu2bfnkk08YN24cL7zwAqGhoTz//PMMGDDA9R7Tpk3j6aef5tFHH+XEiRPUrl2bp59+2ojdFZESprvARKTcu3CH1qlTpwgMDDQ6joiUA7oGSERERNyOCpCIiIi4HZ0CExEREbejI0AiIiLidlSARERExO2oAImIiIjbUQESERERt6MCJCIiIm5HBUhERETcjgqQiIiIuB0VIBEREXE7KkAiIiLidv4fAg2n7P2AKFYAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# summarize history for accuracy\n",
    "plt.plot(history.history['accuracy'])\n",
    "#plt.plot(history.history['val_accuracy'])\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()\n",
    "# summarize history for loss\n",
    "plt.plot(history.history['loss'])\n",
    "#plt.plot(history.history['val_loss'])\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b7c8b35b-f193-46fa-8069-83df3046ca0b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\imsut\\Downloads\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1bb016fd-3967-42a2-ac1e-10d2dc74d522",
   "metadata": {},
   "outputs": [],
   "source": [
    "cm_kan = np.array([[2033, 940], [85, 168]])\n",
    "mcc_kan = 0.19693377535787\n",
    "acc_kan = 0.68226"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "1bc49eb0-237c-407e-ac24-3173a0664380",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x1000 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(2, 2, figsize=(12, 10))\n",
    "#For ANN \n",
    "sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', ax=axes[0, 0])\n",
    "axes[0, 0].set_title('Confusion Matrix ANN')\n",
    "axes[0, 0].set_xlabel('Predicted')\n",
    "axes[0, 0].set_ylabel('Actual')\n",
    "\n",
    "#For KAN\n",
    "sns.heatmap(cm_kan, annot=True, fmt='d', cmap='Blues', ax=axes[0, 1])\n",
    "axes[0, 1].set_title('Confusion Matrix KAN')\n",
    "axes[0, 1].set_xlabel('Predicted')\n",
    "axes[0, 1].set_ylabel('Actual')\n",
    "\n",
    "# Plot MCC and Accuracy\n",
    "metrics = ['MCC', 'Accuracy']\n",
    "values_ann = [mcc, acc]\n",
    "values_kan = [mcc_kan, acc_kan]\n",
    "\n",
    "x = np.arange(len(metrics))\n",
    "width = 0.35\n",
    "axes[1, 1].axis('off')\n",
    "\n",
    "axes[1, 0].bar(x - width/2, values_ann, width, label='ANN')\n",
    "axes[1, 0].bar(x + width/2, values_kan, width, label='KAN')\n",
    "\n",
    "axes[1, 0].set_title('MCC and Accuracy Comparison')\n",
    "axes[1, 0].set_xlabel('Metrics')\n",
    "axes[1, 0].set_ylabel('Values')\n",
    "axes[1, 0].set_xticks(x)\n",
    "axes[1, 0].set_xticklabels(metrics)\n",
    "axes[1, 0].legend()\n",
    "\n",
    "# Adjust layout\n",
    "plt.tight_layout()\n",
    "plt.savefig('./KANsssscore.png',dpi=200)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
